{"mappings":"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","sources":["content/cat_dot/cat_dot.ts"],"sourcesContent":["function setupCanvas(canvas: HTMLCanvasElement) {\n    const dpr = window.devicePixelRatio || 1;\n    canvas.width = +canvas.style.width * dpr;\n    canvas.height = +canvas.style.height * dpr;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.scale(dpr, dpr);\n    return ctx;\n}\n\nfunction clamp(v: number, min: number, max: number): number {\n    return Math.min(max, Math.max(min, v));\n}\n\nclass Dot {\n    x: number = 0;\n    y: number = 0;\n    vx: number = 0.1;\n    vy: number = 0.1;\n    radius: number = 10;\n    fill: string = \"#FF0000\";\n    maxSpeed = 1;\n    maxAcceleration = 0.1;\n\n    render(context: CanvasRenderingContext2D) {\n        context.beginPath();\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        context.fillStyle = this.fill;\n        context.fill();\n    }\n\n    step(elapsedTimeMS: number, width: number, height: number) {\n        this.x += this.vx * elapsedTimeMS;\n        this.y += this.vy * elapsedTimeMS;\n        this.vx += (Math.random() - 0.5) * 2 * this.maxAcceleration;\n        this.vy += (Math.random() - 0.5) * 2 * this.maxAcceleration;\n        this.vx = clamp(this.vx, -this.maxSpeed, this.maxSpeed);\n        this.vy = clamp(this.vy, -this.maxSpeed, this.maxSpeed);\n        if (this.x >= width && this.vx > 0) {\n            this.vx = - this.vx;\n            this.x = width;\n        }\n        if (this.x < 0 && this.vx < 0) {\n            this.vx = - this.vx;\n            this.x = 0;\n        }\n        if (this.y >= height && this.vy > 0) {\n            this.vy = - this.vy;\n            this.y = height;\n        }\n        if (this.y < 0 && this.vy < 0) {\n            this.vy = - this.vy;\n            this.y = 0;\n        }\n    }\n}\n\nfunction runMainLoop() {\n    const canvas = document.getElementById(\"mainCanvas\") as HTMLCanvasElement;\n    const inputRadius = document.getElementById(\"inputRadius\") as HTMLInputElement;\n    const inputColor = document.getElementById(\"inputColor\") as HTMLInputElement;\n    const inputSpeed = document.getElementById(\"inputSpeed\") as HTMLInputElement;\n    const inputAcceleration = document.getElementById(\"inputAcceleration\") as HTMLInputElement;\n    const buttonRestart = document.getElementById(\"buttonRestart\") as HTMLButtonElement;\n    const buttonStart = document.getElementById(\"buttonStart\") as HTMLButtonElement;\n    const buttonStop = document.getElementById(\"buttonStop\") as HTMLButtonElement;\n    const buttonFullscreen = document.getElementById(\"buttonFullscreen\") as HTMLButtonElement;\n    const context = setupCanvas(canvas);\n    let dot = new Dot();\n    let previousTime: number;\n\n    const render = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        dot.render(context);\n    };\n\n    const step = (timestamp: number) => {\n        const rect = canvas.getBoundingClientRect();\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n        dot.step(timestamp - previousTime, canvas.clientWidth, canvas.clientHeight);\n        if (buttonStop.disabled) {\n            return;\n        }\n        previousTime = timestamp;\n        render();\n        requestAnimationFrame(step);\n    }\n\n    const continue_step = (timestamp: number) => {\n        render();\n        previousTime = timestamp;\n        requestAnimationFrame(step);\n    }\n\n    const first_step = (timestamp: number) => {\n        dot.x = 0;\n        dot.y = 0;\n        dot.vx = 0;\n        dot.vy = 0;\n        previousTime = timestamp;\n        render();\n        requestAnimationFrame(step);\n    }\n\n    inputRadius.valueAsNumber = dot.radius;\n    inputColor.value = dot.fill;\n    inputSpeed.valueAsNumber = dot.maxSpeed;\n    inputAcceleration.valueAsNumber = dot.maxAcceleration;\n\n    buttonRestart.onclick = (_) => {\n        requestAnimationFrame(step);\n        buttonStart.disabled = true;\n        buttonStop.disabled = false;\n        requestAnimationFrame(first_step);\n    }\n    buttonStart.onclick = (_) => {\n        buttonStart.disabled = true;\n        buttonStop.disabled = false;\n        requestAnimationFrame(continue_step);\n    }\n    buttonStop.onclick = (_) => {\n        buttonStart.disabled = false;\n        buttonStop.disabled = true;\n    }\n    buttonFullscreen.onclick = (_) => {\n        canvas.requestFullscreen();\n    }\n\n    inputRadius.oninput = (_) => { dot.radius = inputRadius.valueAsNumber; };\n    inputColor.oninput = (_) => { dot.fill = inputColor.value; };\n    inputSpeed.oninput = (_) => { dot.maxSpeed = inputSpeed.valueAsNumber; };\n    inputAcceleration.oninput = (_) => { dot.maxAcceleration = inputAcceleration.valueAsNumber; };\n\n    window.onresize = () => {\n        const dpr = window.devicePixelRatio || 1;\n        canvas.width = +canvas.style.width * dpr;\n        canvas.height = +canvas.style.height * dpr;\n    }\n\n    requestAnimationFrame(first_step);\n}\n\nwindow.addEventListener(\"load\", function () {\n    runMainLoop();\n});\n"],"names":["$7f88672932c112fd$var$clamp","v","min","max","Math","$7f88672932c112fd$var$Dot","x","y","vx","vy","radius","fill","maxSpeed","maxAcceleration","render","context","beginPath","arc","this","PI","fillStyle","step","elapsedTimeMS","width","height","random","$7f88672932c112fd$var$runMainLoop","canvas","document","getElementById","inputRadius","inputColor","inputSpeed","inputAcceleration","buttonRestart","buttonStart","buttonStop","buttonFullscreen","dpr","window","devicePixelRatio","style","ctx","getContext","scale","$7f88672932c112fd$var$setupCanvas","previousTime","dot","clearRect","timestamp","rect","getBoundingClientRect","clientWidth","clientHeight","disabled","requestAnimationFrame","continue_step","first_step","valueAsNumber","value","onclick","_","requestFullscreen","oninput","onresize","addEventListener"],"version":3,"file":"cat_dot.js.map"}